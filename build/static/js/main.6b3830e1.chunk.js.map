{"version":3,"sources":["components/EventConstants.js","components/Controls.js","App.js","store/index.js","index.js","components/Controls.module.css"],"names":["ActionTypes","INCREMENT","INCREMENT_BY_FIVE","INCREASE_BY_VALUE","DECREMENT","TOGGLE","TWEEN_VALUE_FROM_TO","SHOW_WIN","HIDE_WIN","spins","totalSpins","lastReel1","degrees","lastReel2","lastReel3","newReel1Target","newReel2Target","newReel3Target","TARGET_REEL_SPINS","ReelsData","symbol","description","Controls","useState","won","setWon","winnings","setWinnings","dispatch","useDispatch","counter","useSelector","state","show","showCounter","awardAmount","showWin","document","addEventListener","event","stopImmediatePropagation","preventDefault","console","log","updateBalance","decrementHandler","type","gsap","to","duration","balance","onUpdate","className","ControlsStyles","wrapper","controls","controlsDivider","onClick","reel1Degrees","reel2Degrees","reel3Degrees","Math","floor","random","window","unityInstance","SendMessage","value","App","initialState","store","createStore","action","amount","fromValue","range","split","toValue","from","DECREASE_BY_VALUE","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b3830e1.chunk.js","sourcesContent":["const EventConstants = () => {\n}\n\nexport const ActionTypes = {\n    INCREMENT: 'action/increment',\n    INCREMENT_BY_FIVE: 'action/incrementBy5',\n    INCREASE_BY_VALUE: 'action/incrementByValue',\n    DECREMENT: 'action/decrement',\n    TOGGLE: 'action/toggle',\n    TWEEN_VALUE_FROM_TO: 'action/tweenFromTo',\n    SHOW_WIN: 'action/showWin',\n    HIDE_WIN: 'action/hideWin'\n};\n\nexport default EventConstants;","import { useSelector, useDispatch } from \"react-redux\"; //  add connect in when using class version\nimport { ActionTypes } from \"./EventConstants\";\nimport ControlsStyles from \"./Controls.module.css\";\nimport { gsap } from 'gsap';\nimport {useState} from 'react';\n\n// import { Component } from 'react'; //  only needed for class based version of Counter below\nconst readoutdata = { balance: 0};\nconst spins = { totalSpins: 0 };\nconst lastReel1 = { degrees:0};\nconst lastReel2 = { degrees:0}; \nconst lastReel3 = { degrees:0}; \nconst newReel1Target = { degrees:0};\nconst newReel2Target = { degrees:0};\nconst newReel3Target = { degrees:0};\nconst TARGET_REEL_SPINS = 2*1440;\nconst ReelsData = [\n  {symbol:\"O7\", description:\"One Seven\", degrees:265},\n  {symbol:\"CH\", description:\"Cherries One\", degrees:229},\n  {symbol:\"LM\", description:\"Lemon\", degrees:195},\n  {symbol:\"OL\", description:\"Olive\", degrees:160},\n  {symbol:\"OR\", description:\"Orange\", degrees:122},\n  {symbol:\"B1\", description:\"One Bar\", degrees:87},\n  {symbol:\"B2\", description:\"Two Bars\", degrees:50},\n  {symbol:\"B3\", description:\"Three Bars\", degrees:14},\n  {symbol:\"CH\", description:\"Cherries Two\", degrees:338},\n  {symbol:\"T7\", description:\"Three Sevens\", degrees:303}\n]  \n\nconst Controls = () => {\n  \n  const [won, setWon] = useState(false);\n  const [winnings, setWinnings] = useState(0);\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.showCounter);\n  const winState = useSelector((state) => state.showWin);\n  const awardAmount = {dollars:0};\n\n  document.addEventListener(\"spin-complete\", (event) => {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n    setWinnings(2000);\n    console.log(\"Spin animation complete\")\n    updateBalance();\n  });\n\n  const incrementHandler = () => {\n    dispatch({ type: ActionTypes.INCREMENT });\n  };\n\n  const increaseHandler = () => {\n    dispatch({ type: ActionTypes.INCREASE_BY_VALUE, amount: 5 });\n  };\n\n  const decrementHandler = () => {\n    dispatch({ type: ActionTypes.DECREMENT });  };\n\n  const toggleCounterHandler = () => {\n    dispatch({ type: ActionTypes.TOGGLE });\n  };\n\n  const updateBalance = () => {\n    gsap.to(counter, {\n      duration: 1,\n      balance: (counter + awardAmount.dollars), \n      onUpdate: function() {\n        incrementHandler();\n        \n        // roRef.innerHTML = readoutdata.balance.toFixed(0);\n      }\n    });\n    setWon(true);\n    // awardAmount.dollars = 0;\n  };\n\n\n\n  const spinReels = () => {\n    setWon(false)\n    let reel1Degrees;\n    let reel2Degrees;\n    let reel3Degrees;\n\n    newReel1Target.degrees = ReelsData[ Math.floor(Math.random()*10) ].degrees;\n    newReel2Target.degrees = ReelsData[ Math.floor(Math.random()*10) ].degrees;\n    newReel3Target.degrees = ReelsData[ Math.floor(Math.random()*10) ].degrees;\n\n    if( spins.totalSpins > 0 ){\n      reel1Degrees = (360 - lastReel1.degrees) + TARGET_REEL_SPINS + newReel1Target.degrees;\n      reel2Degrees = (360 - lastReel2.degrees) + TARGET_REEL_SPINS + newReel2Target.degrees;\n      reel3Degrees = (360 - lastReel3.degrees) + TARGET_REEL_SPINS + newReel3Target.degrees;\n    } else if( spins.totalSpins === 0 ){\n      reel1Degrees = TARGET_REEL_SPINS + newReel1Target.degrees;\n      reel2Degrees = TARGET_REEL_SPINS + newReel2Target.degrees;\n      reel3Degrees = TARGET_REEL_SPINS + newReel3Target.degrees;\n    }\n\n    window.unityInstance.SendMessage(\"AnimationManager\", \"SpinReelsTo\", (reel1Degrees + \"|\" + reel2Degrees + \"|\" + reel3Degrees ));\n\n    lastReel1.degrees = newReel1Target.degrees;\n    lastReel2.degrees = newReel2Target.degrees;       \n    lastReel3.degrees = newReel3Target.degrees;\n    \n    spins.totalSpins = spins.totalSpins + 1;\n    decrementHandler();\n  } ;\n\n  return (\n      <div className={ControlsStyles.wrapper}>\n        <main className={ControlsStyles.controls}>\n        <div className={won ? \"wonON\" : \"wonOFF\"}>YOU WIN ${ winnings}</div>\n\n          <div className={ControlsStyles.controlsDivider} />\n          <button onClick={spinReels}>SPIN</button>\n          <div className={ControlsStyles.controlsDivider} />\n\n        <button onClick={decrementHandler}>BET $1</button>  \n        {show && <div className={ControlsStyles.value}>{counter}</div>}     \n        </main>\n      </div>\n\n  );\n};\nexport default Controls;\n","import Controls from './components/Controls';\n\nfunction App() {\n  return (\n    <Controls />\n  );\n}\n\nexport default App;\n","\nimport {createStore} from 'redux';\nimport { ActionTypes } from '../components/EventConstants';\n\nconst startingBalance = 990;\nconst initialState = {counter: startingBalance, showCounter: true, showWin: false }\n\nconst counterReducer = (state = initialState, action) => {\n    if( action.type === ActionTypes.INCREMENT) {\n        return {\n            ...state,\n            counter: state.counter + 1\n        }\n    }\n\n    if( action.type === ActionTypes.DECREMENT) {\n        return {\n            ...state,\n            counter: state.counter - 1\n        }\n    }\n\n    if( action.type === ActionTypes.INCREASE_BY_VALUE) {\n        return {\n            ...state,\n            counter: state.counter + action.amount,\n        }\n    }\n\n    if( action.type === ActionTypes.TWEEN_VALUE_FROM_TO) {\n        let fromValue = action.range.split(\":\")[0];\n        let toValue = action.range.split(\":\")[1];\n        return {\n            ...state,\n            from: state.from + fromValue,\n            to: state.to + toValue,\n        }\n    }\n\n\n    if( action.type === ActionTypes.DECREASE_BY_VALUE) {\n        return {\n            ...state,\n            counter: state.counter - action.amount\n        }\n    }\n    \n    if( action.type === ActionTypes.TOGGLE) {\n        return {\n            ...state,\n            showCounter: !state.showCounter\n        }\n    }       \n\n    if( action.type === ActionTypes.SHOW_WIN) {\n        return {\n            ...state,\n            showWin: true\n        }\n    }  \n\n    if( action.type === ActionTypes.HIDE_WIN) {\n        return {\n            ...state,\n            showWin: false\n        }\n    }      \n\n\n    return state;\n}\n\n\nconst store = createStore(counterReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1eluf\",\"wrapper\":\"Controls_wrapper__1KVLY\",\"value\":\"Controls_value__1WNi0\",\"controlsDivider\":\"Controls_controlsDivider__1KgVB\"};"],"sourceRoot":""}